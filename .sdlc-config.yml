# SDLC Configuration for Project
# This file defines the Software Development Life Cycle methodology and enforcement rules

project:
  name: "[PROJECT_NAME]"
  sdlc_methodology: "gitflow"  # gitflow|github-flow|gitlab-flow|agile-scrum|trunk-based
  created_date: "2025-06-23"
  last_updated: "2025-06-23"
  version: "1.0.0"

# Methodology-specific configuration loaded from templates
methodology_config: "../templates/sdlc/gitflow.yml"

# Project-specific overrides and customizations
overrides:
  # Override default quality gates
  quality_gates:
    coverage_threshold: 85  # Override default 80%
    security_rating: "A"    # Maintain high security standards
    
  # Override default review requirements
  code_review:
    required_reviewers: 2   # Require 2 reviewers instead of 1
    required_personas: ["qa_engineer", "architect"]  # Always require QA and architect
    
  # Override branch protection settings
  branch_protection:
    main:
      require_reviews: 3    # Extra protection for main branch
      dismiss_stale_reviews: true
    develop:
      require_reviews: 2    # Enhanced protection for develop

# Persona-specific configurations and role assignments
personas:
  # Map framework personas to SDLC roles
  role_mapping:
    project_manager: ["scrum_master", "release_manager"]
    architect: ["technical_lead", "design_reviewer"]
    frontend_developer: ["ui_developer", "frontend_reviewer"]
    backend_developer: ["api_developer", "backend_reviewer"]
    qa_engineer: ["quality_gatekeeper", "test_automation_lead"]
    devops_engineer: ["ci_cd_maintainer", "environment_manager"]
    security_engineer: ["security_reviewer", "compliance_officer"]
    cloud_engineer: ["infrastructure_reviewer", "platform_engineer"]
  
  # Required approvals per persona
  required_approvals:
    architect:
      - "core_architecture_changes"
      - "api_contract_modifications"
      - "database_schema_changes"
    security_engineer:
      - "security_related_changes"
      - "authentication_modifications"
      - "data_privacy_implementations"
    qa_engineer:
      - "all_code_changes"
      - "release_readiness"
      - "quality_gate_validation"

# Automation and enforcement settings
automation:
  # Branch naming validation
  branch_naming:
    enforce: true
    patterns:
      feature: "^feature/[A-Z]+-\\d+-.+$"  # feature/PROJ-123-description
      bugfix: "^bugfix/[A-Z]+-\\d+-.+$"    # bugfix/PROJ-456-description
      hotfix: "^hotfix/[A-Z]+-\\d+-.+$"    # hotfix/PROJ-789-description
      release: "^release/\\d+\\.\\d+\\.\\d+$" # release/1.2.0
  
  # Commit message validation
  commit_messages:
    enforce: true
    format: "conventional_commits"
    types: ["feat", "fix", "docs", "style", "refactor", "test", "chore"]
    require_scope: false
    max_length: 72
  
  # Pull request automation
  pull_requests:
    auto_assign_reviewers: true
    apply_templates: true
    require_issue_link: true
    auto_merge_on_approval: false  # Manual merge for GitFlow
  
  # Quality gate automation
  quality_gates:
    run_on_pr: true
    block_merge_on_failure: true
    required_checks:
      - "ci/tests"
      - "ci/lint"
      - "ci/security-scan"
      - "ci/coverage"

# Integration settings
integrations:
  # Version control settings
  git:
    default_branch: "main"
    protected_branches: ["main", "develop"]
    merge_strategies: ["merge", "squash"]
    delete_branch_on_merge: true
  
  # Issue tracking integration
  issue_tracking:
    provider: "github"  # github|jira|azure-devops
    require_linked_issues: true
    auto_close_on_merge: true
  
  # CI/CD integration
  ci_cd:
    provider: "github_actions"  # github_actions|gitlab_ci|jenkins
    trigger_on_branch: ["main", "develop", "feature/*", "release/*"]
    deployment_environments:
      develop: "development"
      release: "staging"
      main: "production"

# Quality standards and metrics
quality_standards:
  # Code quality metrics
  code_quality:
    coverage_threshold: 85
    complexity_threshold: 10
    duplication_threshold: 3
  
  # Security standards
  security:
    vulnerability_threshold: "medium"  # block high/critical, allow low/medium
    license_compliance: true
    dependency_scanning: true
  
  # Performance standards
  performance:
    build_time_threshold: "5_minutes"
    test_execution_threshold: "10_minutes"
    deployment_time_threshold: "15_minutes"

# Notification and reporting
notifications:
  # Slack integration
  slack:
    enabled: false
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channels:
      general: "#development"
      alerts: "#alerts"
      releases: "#releases"
  
  # Email notifications
  email:
    enabled: false
    smtp_settings:
      server: "${SMTP_SERVER}"
      port: "${SMTP_PORT}"
      username: "${SMTP_USERNAME}"
      password: "${SMTP_PASSWORD}"
  
  # Notification triggers
  triggers:
    - "pr_created"
    - "pr_approved"
    - "pr_merged"
    - "build_failed"
    - "deployment_started"
    - "deployment_completed"
    - "security_issue_found"

# Metrics and reporting configuration
metrics:
  # Development metrics
  development:
    track_cycle_time: true
    track_lead_time: true
    track_deployment_frequency: true
    track_change_failure_rate: true
    track_mttr: true
  
  # Quality metrics
  quality:
    track_defect_rate: true
    track_test_coverage: true
    track_code_quality_trends: true
    track_security_issues: true
  
  # Team metrics
  team:
    track_velocity: true
    track_burndown: true
    track_team_satisfaction: true
    track_knowledge_sharing: true

# Emergency procedures
emergency:
  # Hotfix procedures
  hotfix:
    auto_create_from_main: true
    required_approvers: ["security_engineer", "project_manager"]
    bypass_some_checks: true  # Allow bypassing non-critical checks
    max_review_time: "2_hours"
  
  # Rollback procedures
  rollback:
    auto_rollback_on_failure: true
    rollback_approval_required: true
    rollback_approvers: ["devops_engineer", "project_manager"]
  
  # Emergency contacts
  contacts:
    primary_oncall: "${PRIMARY_ONCALL}"
    secondary_oncall: "${SECONDARY_ONCALL}"
    escalation_manager: "${ESCALATION_MANAGER}"

# Compliance and audit
compliance:
  # Audit trail
  audit:
    log_all_changes: true
    retain_logs: "2_years"
    export_format: "json"
  
  # Compliance frameworks
  frameworks:
    iso_27001: false
    sox: false
    gdpr: false
    hipaa: false
  
  # Required documentation
  documentation:
    architecture_decision_records: true
    security_review_records: true
    change_management_records: true
    incident_response_records: true

---
# Configuration validation schema
schema_version: "1.0.0"
required_fields:
  - "project.sdlc_methodology"
  - "methodology_config"
  - "personas.role_mapping"
  - "automation.branch_naming.enforce"

validation_rules:
  - "methodology_config file must exist"
  - "required personas must be mapped"
  - "quality thresholds must be positive numbers"
  - "branch patterns must be valid regex"